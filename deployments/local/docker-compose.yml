version: "3.9"

volumes:
  prometheus_data: { }
  grafana_data: { }

services:
  redis:
    extends:
      file: base.yml
      service: redis

  api:
    build:
      context: ../..
    container_name: api
    environment:
      DEBUG: true
    ports:
      - "8080:8080"
    links:
      - redis

  loader:
    build:
      context: ../..
      dockerfile: Dockerfile.bulkloader
    container_name: loader
    environment:
      DEBUG: true
      PROMOTIONS: /data/promotions.csv
      PROMOTIONS_CMDS: /data/promotions_commands_%d.txt
    volumes:
      - ../../data:/data
    links:
      - redis

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - ../grafana/grafana.env
    volumes:
      - grafana_data:/var/lib/grafana
      - ../grafana/:/etc/grafana/provisioning/
    depends_on:
      - prometheus
